#1. dplyr 패키지란?
dplyr은 데이터 전처리(가공, 추출, 요약 등) 작업에 가장 많이 쓰이는 R 패키지입니다.
# 주요 함수
filter()     # 조건에 맞는 행 추출
select()     # 열(변수) 선택
arrange()    # 정렬
mutate()     # 파생변수 생성
summarise()  # 요약 통계량 계산
group_by()   # 그룹별 연산
left_join()  # 데이터 병합 (가로로)
bind_rows()  # 데이터 결합 (세로로)


#2. 조건에 맞는 데이터 추출 filter()
exam %>% filter(class == 1)                     # class가 1인 행
exam %>% filter(class != 1)                     # class가 1이 아닌 행
exam %>% filter(class == 1 & math >= 50)        # AND 조건
exam %>% filter(math >= 90 | english >= 90)     # OR 조건
exam %>% filter(class == 1 | class == 3 | class == 5)   # 여러 조건
exam %>% filter(class %in% c(1, 3, 5))          # 위 조건과 동일한 축약형


#3. R에서 자주 쓰는 연산자
논리 연산자: <, <=, >, >=, ==, !=, |, &, %in%
산술 연산자: +, -, *, /, ^, **, %/%(몫), %%(나머지)


#4. 변수(열) 선택 select()
exam %>% select(math)                         # math 변수만 선택
exam %>% select(class, math, english)         # 여러 변수 선택
exam %>% select(-math)                        # math 변수 제외

exam %>% filter(class == 1) %>% select(english)  # 함수 조합

exam %>%
  select(id, math) %>%
  head()                                       # 괄호 없이도 사용 가능


#5. 정렬하기 arrange()
exam %>% arrange(math)            # math 기준 오름차순
exam %>% arrange(desc(math))      # math 기준 내림차순
exam %>% arrange(class, math)     # class, math 순으로 정렬


#6. 파생변수 만들기 mutate()
exam %>%
  mutate(total = math + english + science) %>%
  head()

exam %>%
  mutate(total = math + english + science,
         mean = (math + english + science)/3) %>%
  head()

# ifelse로 조건에 따라 파생변수 만들기
exam %>%
  mutate(test = ifelse(science >= 60, "pass", "fail")) %>%
  head()

# 파생변수 만든 후 정렬
exam %>%
  mutate(total = math + english + science) %>%
  arrange(total) %>%
  head()


#7. 그룹별 요약 group_by() + summarise()
exam %>% summarise(mean_math = mean(math))  # 전체 평균

exam %>%
  group_by(class) %>%
  summarise(mean_math = mean(math))

exam %>%
  group_by(class) %>%
  summarise(mean_math = mean(math),
            sum_math = sum(math),
            median_math = median(math),
            n = n())  # 행 개수

예시)
mpg %>%
  group_by(manufacturer, drv) %>%
  summarise(mean_cty = mean(cty)) %>%
  head(10)


#8. 데이터 합치기
total <- left_join(test1, test2, by = "id") #가로로 합치기
group_all <- bind_rows(group_a, group_b)    #세로로 합치기
