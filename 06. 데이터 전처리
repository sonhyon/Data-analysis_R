#dplyr은 데이터 전처리 작업에 가장 많이 사용하는 패캐지이다
*filter(), select(), arrange(), mutate(), summarize(), group_by(), left_join(), bind_rows()

#조건에 맞는 데이터 추출
exam %>% filter(class == 1) 
exam %>% filter(class != 1)
exam %>% filter(class == 1 & math >= 50) #and
exam %>% filter(math >= 90 | english >= 90) #or
exam %>% filter(class == 1 | class == 3 | class == 5)
exam %>% filter(class %in% c(1,3,5)) #한꺼번에 묶어서 추출

#R에서 사용하는 기호들
논리 연산자: <, <=, >, >=, ==, !=, |, &, %in%
산술 연산자: +, -, *, /, ^, **, %/%, %%

#변수 추출
exam %>% select(math) 
exam %>% select(class, math, english)
exam %>% select(-math) #math 제외

exam %>% filter(class == 1) %>% select(english) #dplyr 함수 조합하기
exam %>%
  select(id, math) %>%
  head #괄호 없이 사용 가능

#순서대로 정렬하기
exam %>% arrange(math) #오름차순 정렬
exam %>% arrange(desc(math)) #내림차순 정렬
exam %>% arrange(class, math)

#파생변수 추가
exam %>%
  mutate(total = math + english + science) %>% #변수 추가
  head

exam %>% #여러 파생변수 한 번에 추가
  mutate(total = math + english + science,
          mean = (math + english + science)/3) %>%
  head

exam %>% #ifelse 적용하기
  mutate(test = ifesle(science >= 60, "pass", "fail")) %>%
  head

exam %>%
  mutate(total = math + english + science) %>%
  arrange(total) %>% #오름차순
  head

#집단별로 요약하기
exam %>% summarise(mean_math = mean(math))

exam %>%
  group_by(class) %>%
  summarise(mean_math = mean(math))

exam %>%
  group_by(class) %>%
  summarise(mean_math = mean(math),
            sum_math = sum(math),
            median_math = median(math),
            n = n()) #행의 개수 세기

*summarise()에 자주 사용하는 요약 통계량 함수
mean(), sd(), sum(), median(), min(), max(), n()

mpg %>%
  group_by(manufacturer, drv) %>% #각 집단별로 다시 집단 나누기
  summarise(mean_cty = mean(cty)) %>%
  head(10)

#데이터 합치기
total <- left_join(test1, test2, by="id") #가로로 합치기
group_all <- bind_rows(group_a, group_b) #세로로 합치기
*세로로 합칠 때는 변수명이 같아야 하는데 rename()를 사용해 맞출 수 있음
